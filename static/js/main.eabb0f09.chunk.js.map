{"version":3,"sources":["components/ColorPicker/ColorPicker.jsx","components/Slider/Slider.jsx","components/RadioBlock/RadioBlock.jsx","components/Increaser/Increaser.jsx","components/ProductCard/ProductCard.jsx","components/ProductList/ProductList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ColorPicker","state","isOpen","toggle","setState","prevState","this","props","colors","selectedColor","selectColor","className","type","name","onClick","onMouseLeave","map","color","id","React","PureComponent","Slider","images","img","index","src","alt","ClassNames","RadioBlock","items","productId","selectedValue","selectValue","value","onChange","checked","htmlFor","Increaser","quantity","increaseQuantity","decreaseQuantity","ProductCard","volume","volumes","isButtonPressed","isIconClicked","selectVolume","title","description","price","ProductList","products","productsImages","product","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eabb0f09.chunk.js","sourcesContent":["import React from 'react';\nimport './ColorPicker.scss';\n\nexport class ColorPicker extends React.PureComponent {\n  state = {\n    isOpen: false,\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen,\n    }));\n  }\n\n  render() {\n    const { colors, selectedColor, selectColor } = this.props;\n\n    return (\n      <div className=\"color-picker\">\n        <button\n          type=\"button\"\n          name=\"button\"\n          className=\"color-picker__button button\"\n          onClick={this.toggle}\n        >\n          {selectedColor.name || 'Цвет'}\n        </button>\n        {this.state.isOpen && (\n          <ul \n            className=\"color-picker__list\" \n            onMouseLeave={this.toggle}\n          >\n            {colors.map(color => (\n              <li\n                className=\"color-picker__list-item\"\n                key={color.id}\n                onClick={() => {\n                  selectColor(color);\n                  this.toggle();\n                }}\n              >\n                {color.name}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './Slider.scss';\nimport ClassNames from 'classnames';\n\nexport const Slider = ({ images }) => (\n  <div className=\"slider__img-block\">\n    {images.map((img, index) => (\n      <img \n        src={img}\n        alt=\"Product\"\n        className={ClassNames('slider__img', {\n          'slider__img--secondary': index > 0,\n        })}\n        key={img}\n      />\n    ))}\n  </div>\n);","import React from 'react';\nimport './RadioBlock.scss';\n\nexport const RadioBlock = ({ items, productId, selectedValue, selectValue }) => (\n  <div className=\"radio-block\">\n    {items.map(value => (\n      <div \n        className=\"radio-block__item\" \n        key={value}\n      >\n        <input \n          id={`${productId}${value}`} \n          type=\"radio\"\n          name={`radio${productId}`} \n          value={value}\n          className=\"radio-block__input\" \n          onChange={() => selectValue(value)}\n          checked={selectedValue === value}\n        />\n        <label \n          htmlFor={`${productId}${value}`} \n          className=\"radio-block__label\"\n        >\n          <div><div></div></div>\n          {`${value} мл`}\n        </label>\n      </div>\n    ))}\n  </div> \n);","import React from 'react';\nimport './Increaser.scss';\n\nexport const Increaser = ({ quantity, increaseQuantity, decreaseQuantity }) => (\n  <div className=\"increaser\">\n    <button\n      type=\"button\"\n      name=\"decrease\"\n      className=\"increaser__item increaser__item--left\"\n      onClick={decreaseQuantity}\n    >\n      -\n    </button>\n    <div className=\"increaser__item\">\n      {quantity}\n    </div>\n    <button\n      type=\"button\"\n      name=\"increase\"\n      className=\"increaser__item increaser__item--right\"\n      onClick={increaseQuantity}\n    >\n      +\n    </button>\n  </div>\n);","import React from 'react';\nimport './ProductCard.scss';\nimport ClassNames from 'classnames';\n\nimport { ColorPicker } from '../ColorPicker';\nimport { Slider } from '../Slider';\nimport { RadioBlock } from '../RadioBlock';\nimport { Increaser } from '../Increaser';\n\nexport class ProductCard extends React.PureComponent {\n  state = {\n    quantity: 1,\n    volume: this.props.volumes[0],\n    color: '',\n    isButtonPressed: false,\n    isIconClicked: false,\n  };\n\n  increaseQuantity = () => {\n    this.setState(prevState => ({\n      quantity: prevState.quantity + 1,\n    }));\n  };\n\n  decreaseQuantity = () => {\n    if (this.state.quantity <= 1) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      quantity: prevState.quantity - 1,\n    }));\n  };\n\n  selectVolume = (value) => {\n    this.setState({\n      volume: value,\n    });\n  };\n\n  selectColor = (color) => {\n    this.setState({\n      color,\n    });\n  };\n\n  render() {\n    const { \n      id, \n      title, \n      description, \n      images, \n      price, \n      volumes, \n      colors \n    } = this.props;\n    const { quantity, volume, color } = this.state;\n\n    return (\n      <div className=\"product-card product-list__card\">\n        <div className=\"product-card__top\">\n          <div className=\"product-card__new-mark\">new</div>\n\n          <Slider images={images} />\n\n          <div \n            className={ClassNames('product-card__icon', {\n              'product-card__icon--clicked': this.state.isIconClicked\n            })}\n            onClick={() => this.setState(prevState => ({\n              isIconClicked: !prevState.isIconClicked\n            }))}\n          >\n          </div>\n        </div>\n        <div className=\"product-card__title\">{title}</div>\n        <p className=\"product-card__description\">{description}</p>\n        \n        <div className=\"product-card__select-block\">\n          <ColorPicker\n            selectedColor={color}\n            colors={colors}\n            selectColor={this.selectColor}\n          />\n\n          <p className=\"product-card__price\">{`${price} грн`}</p>\n        </div>\n\n        <RadioBlock\n          items={volumes}\n          selectedValue={volume}\n          selectValue={this.selectVolume}\n          productId={id}\n        />\n\n        <div className=\"product-card__buttons\">\n          <Increaser\n            quantity={quantity}\n            increaseQuantity={this.increaseQuantity}\n            decreaseQuantity={this.decreaseQuantity}\n          />\n\n          <button\n            type=\"button\"\n            className={ClassNames('product-card__button',\n              { 'product-card__button--pressed': this.state.isButtonPressed }\n            )}\n            onClick={() => this.setState(prevState => ({\n              isButtonPressed: !prevState.isButtonPressed\n            }))}\n          >\n            Купить\n          </button>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { ProductCard } from '../ProductCard';\nimport './ProductList.scss';\n\nexport const ProductList = ({ products, productsImages }) => (\n  <div className=\"product-list\">\n    {products.map(product => (\n      <ProductCard {...product} key={product.id} />\n    ))}\n  </div>\n);","import React from 'react';\nimport './App.scss';\nimport { ProductList } from './components/ProductList';\n\nimport products from './api/products';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <ProductList \n        products={products}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}