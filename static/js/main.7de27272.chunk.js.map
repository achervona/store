{"version":3,"sources":["components/ColorPicker/ColorPicker.jsx","components/ProductCard/ProductCard.jsx","components/ProductList/ProductList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ColorPicker","state","isOpen","toggle","setState","prevState","this","props","colors","selectedColor","selectColor","className","type","name","onClick","map","color","ClassNames","value","id","React","PureComponent","ProductCard","quantity","volume","volumes","isButtonPressed","isIconClicked","increaseQuantity","decreaseQuantity","selectVolume","title","description","images","price","img","index","src","alt","onChange","checked","htmlFor","ProductList","products","productsImages","product","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8kDAIaA,G,MAAb,4MACEC,MAAQ,CACNC,QAAQ,GAFZ,EAKEC,OAAS,WACP,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BH,QAASG,EAAUH,YAPzB,uDAWY,IAAD,SACwCI,KAAKC,MAA5CC,EADD,EACCA,OAAQC,EADT,EACSA,cAAeC,EADxB,EACwBA,YAE/B,OACE,sBAAKC,UAAU,eAAf,UACE,wBACEC,KAAK,SACLC,KAAK,SACLF,UAAU,8BACVG,QAASR,KAAKH,OAJhB,SAMGM,EAAcI,MAAQ,6BAExBP,KAAKL,MAAMC,QACV,oBAAIS,UAAU,qBAAd,SACGH,EAAOO,KAAI,SAAAC,GAAK,OACf,oBACEL,UAAWM,IAAW,0BAA2B,CAC/C,oCAAqCR,EAAcS,QAAUF,EAAME,QAGrEJ,QAAS,WACPJ,EAAYM,GACZ,EAAKb,UAPT,SAUGa,EAAMH,MANFG,EAAMG,gBA/B3B,GAAiCC,IAAMC,gBCI1BC,EAAb,4MACErB,MAAQ,CACNsB,SAAU,EACVC,OAAQ,EAAKjB,MAAMkB,QAAQ,GAC3BT,MAAO,GACPU,iBAAiB,EACjBC,eAAe,GANnB,EASEC,iBAAmB,WACjB,EAAKxB,UAAS,SAAAC,GAAS,MAAK,CAC1BkB,SAAUlB,EAAUkB,SAAW,OAXrC,EAeEM,iBAAmB,WACb,EAAK5B,MAAMsB,UAAY,GAI3B,EAAKnB,UAAS,SAAAC,GAAS,MAAK,CAC1BkB,SAAUlB,EAAUkB,SAAW,OArBrC,EAyBEO,aAAe,SAACZ,GACd,EAAKd,SAAS,CACZoB,OAAQN,KA3Bd,EA+BER,YAAc,SAACM,GACb,EAAKZ,SAAS,CACZY,WAjCN,uDAqCY,IAAD,SASHV,KAAKC,MAPPY,EAFK,EAELA,GACAY,EAHK,EAGLA,MACAC,EAJK,EAILA,YACAC,EALK,EAKLA,OACAC,EANK,EAMLA,MACAT,EAPK,EAOLA,QACAjB,EARK,EAQLA,OARK,EAU6BF,KAAKL,MAAjCsB,EAVD,EAUCA,SAAUC,EAVX,EAUWA,OAAQR,EAVnB,EAUmBA,MAE1B,OACE,sBAAKL,UAAU,kCAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,yBAAf,iBACA,qBAAKA,UAAU,0BAAf,SACGsB,EAAOlB,KAAI,SAACoB,EAAKC,GAAN,OACV,qBACEC,IAAG,UA1DH,YA0DG,OAAeF,GAClBG,IAAI,UACJ3B,UAAWM,IAAW,oBAAqB,CACzC,+BAAgCmB,EAAQ,KAErCD,QAKX,qBACExB,UAAWM,IAAW,qBAAsB,CAC1C,8BAA+BX,KAAKL,MAAM0B,gBAE5Cb,QAAS,kBAAM,EAAKV,UAAS,SAAAC,GAAS,MAAK,CACzCsB,eAAgBtB,EAAUsB,wBAKhC,qBAAKhB,UAAU,sBAAf,SAAsCoB,IACtC,mBAAGpB,UAAU,4BAAb,SAA0CqB,IAE1C,sBAAKrB,UAAU,6BAAf,UACE,cAAC,EAAD,CACEF,cAAeO,EACfR,OAAQA,EACRE,YAAaJ,KAAKI,cAGpB,mBAAGC,UAAU,sBAAb,mBAAuCuB,EAAvC,4BAGF,qBAAKvB,UAAU,4BAAf,SACGc,EAAQV,KAAI,SAAAG,GAAK,OAChB,sBAAKP,UAAU,2BAAf,UACE,uBACEQ,GAAE,UAAKA,GAAL,OAAUD,GACZN,KAAK,QACLC,KAAI,eAAUM,GACdD,MAAOA,EACPP,UAAU,sBACV4B,SAAU,kBAAM,EAAKT,aAAaZ,IAClCsB,QAAShB,IAAWN,IAEtB,wBACEuB,QAAO,UAAKtB,GAAL,OAAUD,GACjBP,UAAU,4BAFZ,UAIE,8BAAK,0BAJP,UAKMO,EALN,sBAV6CA,QAqBnD,sBAAKP,UAAU,wBAAf,UACE,sBAAKA,UAAU,gCAAf,UACE,wBACEC,KAAK,SACLC,KAAK,WACLF,UAAU,8EACVG,QAASR,KAAKuB,iBAJhB,eAQA,qBAAKlB,UAAU,qCAAf,SACGY,IAEH,wBACEX,KAAK,SACLC,KAAK,WACLF,UAAU,+EACVG,QAASR,KAAKsB,iBAJhB,kBAUF,wBACEhB,KAAK,SACLD,UAAWM,IAAW,uBACpB,CAAE,gCAAiCX,KAAKL,MAAMyB,kBAEhDZ,QAAS,kBAAM,EAAKV,UAAS,SAAAC,GAAS,MAAK,CACzCqB,iBAAkBrB,EAAUqB,qBANhC,4DAvIV,GAAiCN,IAAMC,eCJ1BqB,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,EAAaC,eAAb,OACzB,qBAAKjC,UAAU,eAAf,SACGgC,EAAS5B,KAAI,SAAA8B,GAAO,OACnB,wBAAC,EAAD,2BAAiBA,GAAjB,IAA0BC,IAAKD,EAAQ1B,a,QCS9B4B,MAVf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,cAAC,EAAD,CACEgC,SAAUA,OCEHK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7de27272.chunk.js","sourcesContent":["import React from 'react';\nimport './ColorPicker.scss';\nimport ClassNames from 'classnames';\n\nexport class ColorPicker extends React.PureComponent {\n  state = {\n    isOpen: false,\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen,\n    }));\n  }\n\n  render() {\n    const { colors, selectedColor, selectColor } = this.props;\n\n    return (\n      <div className=\"color-picker\">\n        <button\n          type=\"button\"\n          name=\"button\"\n          className=\"color-picker__button button\"\n          onClick={this.toggle}\n        >\n          {selectedColor.name || 'Цвет'}\n        </button>\n        {this.state.isOpen && (\n          <ul className=\"color-picker__list\">\n            {colors.map(color => (\n              <li\n                className={ClassNames('color-picker__list-item', {\n                  'color-picker__list-item--selected': selectedColor.value === color.value,\n                })}\n                key={color.id}\n                onClick={() => {\n                  selectColor(color);\n                  this.toggle();\n                }}\n              >\n                {color.name}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './ProductCard.scss';\nimport ClassNames from 'classnames';\n\nimport { ColorPicker } from '../ColorPicker';\n\nconst IMG_URL = '/images/';\n\nexport class ProductCard extends React.PureComponent {\n  state = {\n    quantity: 1,\n    volume: this.props.volumes[0],\n    color: '',\n    isButtonPressed: false,\n    isIconClicked: false,\n  };\n\n  increaseQuantity = () => {\n    this.setState(prevState => ({\n      quantity: prevState.quantity + 1,\n    }));\n  };\n\n  decreaseQuantity = () => {\n    if (this.state.quantity <= 1) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      quantity: prevState.quantity - 1,\n    }));\n  };\n\n  selectVolume = (value) => {\n    this.setState({\n      volume: value,\n    });\n  };\n\n  selectColor = (color) => {\n    this.setState({\n      color,\n    });\n  };\n\n  render() {\n    const { \n      id, \n      title, \n      description, \n      images, \n      price, \n      volumes, \n      colors \n    } = this.props;\n    const { quantity, volume, color } = this.state;\n\n    return (\n      <div className=\"product-card product-list__card\">\n        <div className=\"product-card__top\">\n          <div className=\"product-card__new-mark\">new</div>\n          <div className=\"product-card__img-block\">\n            {images.map((img, index) => (\n              <img \n                src={`${IMG_URL}${img}`}\n                alt=\"Product\"\n                className={ClassNames('product-card__img', {\n                  'product-card__img--secondary': index > 0,\n                })}\n                key={img}\n              />\n            ))}\n          </div>\n\n          <div \n            className={ClassNames('product-card__icon', {\n              'product-card__icon--clicked': this.state.isIconClicked\n            })}\n            onClick={() => this.setState(prevState => ({\n              isIconClicked: !prevState.isIconClicked\n            }))}\n          >\n          </div>\n        </div>\n        <div className=\"product-card__title\">{title}</div>\n        <p className=\"product-card__description\">{description}</p>\n        \n        <div className=\"product-card__select-block\">\n          <ColorPicker\n            selectedColor={color}\n            colors={colors}\n            selectColor={this.selectColor}\n          />\n\n          <p className=\"product-card__price\">{`${price} грн`}</p>\n        </div>\n      \n        <div className=\"product-card__radio-block\">\n          {volumes.map(value => (\n            <div className=\"product-card__radio-item\" key={value}>\n              <input \n                id={`${id}${value}`} \n                type=\"radio\"\n                name={`radio${id}`} \n                value={value}\n                className=\"product-card__radio\"\n                onChange={() => this.selectVolume(value)}\n                checked={volume === value}\n              />\n              <label \n                htmlFor={`${id}${value}`} \n                className=\"product-card__radio-label\"\n              >\n                <div><div></div></div>\n                {`${value} мл`}\n              </label>\n            </div>\n          ))}\n        </div> \n\n        <div className=\"product-card__buttons\">\n          <div className=\"product-card__quantity-change\">\n            <button\n              type=\"button\"\n              name=\"decrease\"\n              className=\"product-card__quantity-change-item product-card__quantity-change-item--left\"\n              onClick={this.decreaseQuantity}\n            >\n              -\n            </button>\n            <div className=\"product-card__quantity-change-item\">\n              {quantity}\n            </div>\n            <button\n              type=\"button\"\n              name=\"increase\"\n              className=\"product-card__quantity-change-item product-card__quantity-change-item--right\"\n              onClick={this.increaseQuantity}\n            >\n              +\n            </button>\n          </div>\n\n          <button\n            type=\"button\"\n            className={ClassNames('product-card__button',\n              { 'product-card__button--pressed': this.state.isButtonPressed }\n            )}\n            onClick={() => this.setState(prevState => ({\n              isButtonPressed: !prevState.isButtonPressed\n            }))}\n          >\n            Купить\n          </button>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { ProductCard } from '../ProductCard';\nimport './ProductList.scss';\n\nexport const ProductList = ({ products, productsImages }) => (\n  <div className=\"product-list\">\n    {products.map(product => (\n      <ProductCard {...product} key={product.id} />\n    ))}\n  </div>\n);","import React from 'react';\nimport './App.scss';\nimport { ProductList } from './components/ProductList';\n\nimport products from './api/products';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <ProductList \n        products={products}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}